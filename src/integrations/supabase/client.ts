
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yiunhkcbqdbhxjrdwgaq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlpdW5oa2NicWRiaHhqcmR3Z2FxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE2OTA1NjAsImV4cCI6MjA1NzI2NjU2MH0.PBvJvi-zF6dy8kIous7X_qw5LAAOv4ie8S4BMuStR10";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: false, // Changed to false to handle refreshes manually
      persistSession: true,
      storageKey: 'tripscape-auth-token',
      detectSessionInUrl: false, // Disabled URL detection to prevent conflicts
      flowType: 'pkce',
      debug: false // Disabled debug mode to reduce noise
    },
    global: {
      headers: {
        'X-Client-Info': 'tripscape-app'
      }
    },
    // Set shorter timeout to prevent hanging requests
    realtime: {
      timeout: 5000 // 5 seconds (reduced from 10 seconds)
    }
  }
);

// Add a helper function to completely clear auth data
export const clearAuthData = () => {
  console.log('Clearing all auth data');
  
  // Clear Supabase auth tokens from storage
  localStorage.removeItem('tripscape-auth-token');
  localStorage.removeItem('supabase.auth.token');
  localStorage.removeItem('supabase.auth.expires_at');
  localStorage.removeItem('supabase.auth.refresh_token');
  sessionStorage.removeItem('supabase.auth.token');
  
  // Clear cookies
  document.cookie.split(";").forEach(function(c) {
    document.cookie = c.replace(/^ +/, "").replace(/=.*/, "=;expires=" + new Date().toUTCString() + ";path=/");
  });
};
